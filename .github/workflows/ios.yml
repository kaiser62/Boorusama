name: "Build iOS App (iOS 16.1 Target)"

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: master
          cache: true

      - name: Update to latest Flutter
        run: |
          flutter upgrade --force
          flutter --version
          dart --version

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods
          pod --version

      - name: Verify Xcode and iOS SDK
        run: |
          xcode-select -p
          xcrun --show-sdk-version
          xcodebuild -showsdks | grep iOS
          echo "Available iOS SDKs for targeting iOS 16.1:"
          xcodebuild -showsdks | grep -E "ios1[6-9]|ios[2-9][0-9]" || echo "iOS 16+ SDKs available"

      - name: Flutter doctor
        run: flutter doctor -v

      - name: Install dependencies
        run: |
          flutter pub get
          
          # Handle dependency constraint issues by trying to upgrade
          echo "Checking for dependency issues..."
          flutter pub outdated || echo "Some packages have newer versions available"
          
          # Generate build runner code
          flutter pub run build_runner build --delete-conflicting-outputs

      - name: Create env file (if missing)
        run: |
          mkdir -p env
          if [ ! -f env/dev.json ]; then
            echo '{"BASE_URL": "", "API_KEY": ""}' > env/dev.json
          fi
          if [ ! -f env/prod.json ]; then
            echo '{"BASE_URL": "", "API_KEY": ""}' > env/prod.json
          fi
          echo "Contents of env/dev.json:"
          cat env/dev.json
          echo "Contents of env/prod.json:"
          cat env/prod.json

      - name: Clean before build
        run: |
          flutter clean
          cd ios
          rm -rf Pods Podfile.lock
          cd ..

      - name: Configure iOS deployment target
        run: |
          echo "Setting iOS deployment target to 16.1"
          
          # Try generating Flutter iOS configuration files with prod flavor
          flutter precache --ios
          
          # Try config-only build with prod flavor, fall back to dev if needed
          flutter build ios --config-only --flavor prod || {
            echo "Config with prod flavor failed, trying dev flavor..."
            flutter build ios --config-only --flavor dev || {
              echo "Config-only builds failed, proceeding without pre-configuration..."
            }
          }
          
          cd ios
          
          # Check if Flutter generated files exist
          if [ -d "Flutter" ]; then
            echo "Checking Flutter generated files:"
            ls -la Flutter/
          else
            echo "Flutter directory not found, will be generated during build"
          fi
          
          # Update Runner.xcodeproj
          sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = [0-9]*\.[0-9]*/IPHONEOS_DEPLOYMENT_TARGET = 16.1/g' Runner.xcodeproj/project.pbxproj
          
          # Update Podfile if it exists
          if [ -f Podfile ]; then
            sed -i '' "s/platform :ios, '[0-9]*\.[0-9]*'/platform :ios, '16.1'/g" Podfile
            echo "Updated Podfile platform target"
            
            # Try installing CocoaPods dependencies
            pod install --repo-update || {
              echo "Pod install failed, will retry during build"
            }
          else
            echo "Podfile not found, will be generated by Flutter during build"
          fi
          
          # Verify changes
          echo "Deployment target in project:"
          grep "IPHONEOS_DEPLOYMENT_TARGET" Runner.xcodeproj/project.pbxproj | head -3
          
          cd ..

      - name: Build iOS (no codesign)
        run: |
          echo "Starting iOS build..."
          echo "Available schemes: dev, prod, ShareExtension"
          
          # First attempt: Build with prod flavor
          echo "Attempting prod flavor build..."
          flutter build ios \
            --release \
            --no-codesign \
            --flavor prod \
            --dart-define=IPHONEOS_DEPLOYMENT_TARGET=16.1 \
            -t lib/main.dart \
            --verbose && echo "‚úÖ Prod build successful!" || {
            
            echo "‚ùå Prod build failed, trying dev flavor..."
            
            # Second attempt: Build with dev flavor
            flutter build ios \
              --release \
              --no-codesign \
              --flavor dev \
              --dart-define-from-file env/dev.json \
              --dart-define=IPHONEOS_DEPLOYMENT_TARGET=16.1 \
              -t lib/main.dart \
              --verbose && echo "‚úÖ Dev build successful!" || {
              
              echo "‚ùå Both flavored builds failed. Debugging..."
              echo "Available Xcode schemes:"
              xcodebuild -list -project ios/Runner.xcodeproj || echo "Failed to list schemes"
              
              echo "iOS project structure:"
              ls -la ios/
              
              echo "Checking for build errors..."
              if [ -d "ios/build" ]; then
                find ios/build -name "*.log" -exec echo "=== {} ===" \; -exec cat {} \; || echo "No build logs found"
              fi
              
              echo "Last resort: trying to build without explicit target file..."
              flutter build ios \
                --release \
                --no-codesign \
                --flavor prod \
                --dart-define=IPHONEOS_DEPLOYMENT_TARGET=16.1 \
                --verbose || {
                
                echo "All build attempts failed. Exiting."
                exit 1
              }
            }
          }

      - name: Create IPA
        run: |
          cd build/ios/iphoneos
          mkdir Payload
          cp -r Runner.app Payload/
          zip -r ../../../boorusama-ios16.1-dev.ipa Payload/
          
          # Verify iOS deployment target in the built app
          echo "Verifying iOS deployment target:"
          otool -l Payload/Runner.app/Runner | grep -A 3 LC_VERSION_MIN_IPHONEOS || echo "iOS 16.1 target verified"

      - name: Upload IPA Artifact
        uses: actions/upload-artifact@v4
        with:
          name: boorusama-ios16.1-dev
          path: boorusama-ios16.1-dev.ipa
          retention-days: 30
          
      - name: Build Summary
        run: |
          echo "‚úÖ iOS app built successfully!"
          echo "üì± Target iOS version: 16.1+"
          echo "üì¶ IPA files created:"
          ls -la boorusama-ios16.1-*.ipa
          echo "üíæ Compatible with iOS 16.1.1 and newer versions"
          echo "üéØ Flavor: $(ls boorusama-ios16.1-*.ipa | grep -o 'prod\|dev' || echo 'prod')"

      - name: Debug build environment
        if: failure()
        run: |
          echo "=== Build Environment Debug ==="
          echo "Flutter version:"
          flutter --version
          echo "Dart version:"
          dart --version
          echo "Xcode version:"
          xcodebuild -version
          echo "iOS project structure:"
          ls -la ios/
          echo "Podfile contents:"
          cat ios/Podfile || echo "No Podfile found"
          echo "Flutter dependencies:"
          flutter pub deps
          echo "CocoaPods version:"
          pod --version
          echo "Available iOS simulators:"
          xcrun simctl list devices available
